const { GS1Parser, parseGS1 } = require('../dist/index.js');

console.log('üß™ My GS1 Parser Test\n');

// –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä —Å –Ω—É–∂–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
const parser = new GS1Parser({
  separator: '{GS}',  // –ú–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –ª—é–±–æ–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
  prioritize9199: true,
  scannerReplacements: {
    '029': '',    // –ó–∞–º–µ–Ω—ã –¥–ª—è –≤–∞—à–µ–≥–æ —Å–∫–∞–Ω–µ—Ä–∞
    ' ': '',      // –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤
    // –î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∑–∞–º–µ–Ω—ã –∑–¥–µ—Å—å
  }
});

// === –í–ê–® –ö–û–î –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===

// –ü—Ä–∏–º–µ—Ä 1: –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
console.log('=== Test 1: Simple string ===');
const result1 = parser.parse('0101234567890128');
console.log('Result:', result1);

// –ü—Ä–∏–º–µ—Ä 2: –°—Ç—Ä–æ–∫–∞ —Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏ —Å–∫–∞–Ω–µ—Ä–∞
console.log('\n=== Test 2: Scanner artifacts ===');
const result2 = parser.parse('0101234567890128 029 91123456');
console.log('Result:', result2);

// –ü—Ä–∏–º–µ—Ä 3: –í–∞—à–∞ —Å—Ç—Ä–æ–∫–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ—é)
console.log('\n=== Test 3: Your string ===');
const myString = '010123456789012891INTERNAL92DATA'; // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –°–í–û–Æ –°–¢–†–û–ö–£
const result3 = parser.parse(myString);
console.log('Result:', result3);

// === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ ===

// –¢–µ—Å—Ç —Å —É–¥–æ–±–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π
console.log('\n=== Test 4: Convenience function ===');
const result4 = parseGS1('010123456789012891123456', { separator: '|' });
console.log('Result:', result4);

// –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
console.log('\n=== Test 5: Error handling ===');
const result5 = parser.parse('9901234567890128'); // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π AI
console.log('Result:', result5);

// === –í–ê–®–ò –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ ===
// –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å —Å–≤–æ–∏ —Ç–µ—Å—Ç—ã

console.log('\nüéâ Testing completed!');

